{
  "openapi": "3.0.0",
  "info": {
    "title": "Clickthulu API",
    "version": "1.0.0",
    "description": "API documentation for Clickthulu backend"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter your access token"
      }
    }
  },
  "paths": {
    "/api/achievements": {
      "get": {
        "summary": "Get all achievements",
        "description": "Retrieve all available achievements in the game",
        "tags": [
          "Achievements"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of achievements"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "User login",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "password"
                ],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully authenticated"
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/api/auth/refreshToken": {
      "post": {
        "summary": "Refresh access token",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New access token issued"
          },
          "401": {
            "description": "Invalid or expired refresh token"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "summary": "Logout user",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Logged out successfully"
          }
        }
      }
    },
    "/api/cards": {
      "get": {
        "summary": "List user's owned cards",
        "tags": [
          "Cards"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of cards"
          }
        }
      }
    },
    "/api/cards/{cardId}": {
      "get": {
        "summary": "Get card type including effects",
        "tags": [
          "Cards"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cardId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Card type details"
          }
        }
      },
      "post": {
        "summary": "Add a card to the user's collection (increments count if exists)",
        "tags": [
          "Cards"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cardId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "default": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated/created user card"
          }
        }
      }
    },
    "/api/cards/{cardId}/activate": {
      "post": {
        "summary": "Activate a card's effects for the authenticated user",
        "tags": [
          "Cards"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cardId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated stats and applied effects"
          }
        }
      }
    },
    "/api/game/click": {
      "post": {
        "summary": "Register user clicks and award XP",
        "tags": [
          "Game"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clicks": {
                    "type": "integer",
                    "minimum": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated stats and deltas"
          }
        }
      }
    },
    "/api/game/calculate": {
      "get": {
        "summary": "Apply passive income since last calculation",
        "tags": [
          "Game"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Updated stats and per-second rates"
          }
        }
      }
    },
    "/api/server/health": {
      "get": {
        "summary": "Health check endpoint",
        "description": "Checks if the API and database are working",
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "description": "API and database are healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "healthy"
                    },
                    "database": {
                      "type": "string",
                      "example": "connected"
                    },
                    "timestamp": {
                      "type": "number",
                      "format": "UNIX-Epoch"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server or database error"
          }
        }
      }
    },
    "/api/upgrades": {
      "get": {
        "summary": "Get all upgrades",
        "description": "Retrieve all available upgrades in the game",
        "tags": [
          "Upgrades"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of upgrades"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "List users",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of users"
          }
        }
      },
      "post": {
        "summary": "Create a user",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "summary": "Get the currently authenticated user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current user data"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/users/me/achievements": {
      "get": {
        "summary": "List active achievement definitions",
        "description": "Returns all active achievement definitions. Moved from /api/achievements.",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of achievements"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User data"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/users/{id}/click": {
      "post": {
        "summary": "Register a user click",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Click registered"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/users/{id}/upgrades": {
      "get": {
        "summary": "List user-owned upgrades",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of upgrades"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/users/{id}/achievements": {
      "get": {
        "summary": "List a user's unlocked achievements",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "me"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of user achievements"
          }
        }
      }
    },
    "/api/worshippers": {
      "get": {
        "summary": "List user's worshippers",
        "tags": [
          "Worshippers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of worshippers"
          }
        }
      }
    },
    "/api/worshippers/{id}": {
      "get": {
        "summary": "Get worshipper type including effects",
        "tags": [
          "Worshippers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Worshipper type details"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "Cards",
      "description": "Card ownership and metadata"
    },
    {
      "name": "Game",
      "description": "Gameplay endpoints"
    },
    {
      "name": "Users",
      "description": "User management and gameplay endpoints"
    },
    {
      "name": "Worshippers",
      "description": "Worshipper ownership and metadata"
    }
  ]
}